# .github/workflows/deploy-to-gcp.yml

name: Build and Deploy to Cloud Run

# 1. Trigger the workflow on pushes to the main branch
on:
  push:
    branches:
      - main
  workflow_dispatch:

# 2. Set up environment variables for the project
env:
  PROJECT_ID: data-engineering-boot-camp # Your Google Cloud project ID
  GAR_LOCATION: us-central1             # The region for Artifact Registry
  SERVICE_NAME: kmckenzie-api             # The name of your Cloud Run service
  REGION: us-central1                   # The region for your Cloud Run service
# 3. Define the job that will run
jobs:
  deploy:
    # 4. Grant permissions for OIDC authentication
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      # 5. Check out the repository's code
      - name: Checkout code
        uses: actions/checkout@v4

      # 6. Authenticate to Google Cloud using Workload Identity Federation
      # This is the secure, keyless way to connect to GCP
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: 'projects/1009912290393/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
          service_account: 'github-actions-sa@data-engineering-boot-camp.iam.gserviceaccount.com'

      # 7. Set up Google Cloud SDK
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
# 8. Enable necessary Google Cloud services
      # This ensures the APIs for Cloud Run and Artifact Registry are active
      - name: Enable Google Cloud APIs
        run: |-
          gcloud services enable run.googleapis.com
          gcloud services enable artifactregistry.googleapis.com
# 9. Build and push the Docker image to Google Artifact Registry
      # Artifact Registry is where you store your container images
      - name: Build and Push Docker Image
        run: |-
          gcloud artifacts repositories create ${{ env.SERVICE_NAME }}-repo --repository-format=docker --location=${{ env.GAR_LOCATION }} --description="Docker repository for student APIs" || echo "Repository already exists"
          gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev
          docker build -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}-repo/${{ env.SERVICE_NAME }}:${{ github.sha }} .
          docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}-repo/${{ env.SERVICE_NAME }}:${{ github.sha }}
# 10. Deploy the new image to Cloud Run
      - name: Deploy to Cloud Run
        run: |-
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}-repo/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --region=${{ env.REGION }} \
            --platform=managed \
            --allow-unauthenticated # Use --no-allow-unauthenticated for a private API
